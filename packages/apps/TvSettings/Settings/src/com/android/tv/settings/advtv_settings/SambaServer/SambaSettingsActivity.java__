package com.android.tv.settings.advtv_settings.SambaServer;

import android.app.Activity;
import android.app.FragmentTransaction;
import android.content.ContentResolver;
import android.os.Bundle;
import android.provider.Settings;
import android.ugoos.samba.SambaManager;
import android.widget.Toast;
import com.android.tv.settings.R;
import com.android.tv.settings.connectivity.setup.TextInputWizardFragment;

/* loaded from: classes.dex */
public class SambaSettingsActivity extends Activity implements TextInputWizardFragment.Listener {
    private SambaManager mSmbManager;
    private ContentResolver resolver;
    private int samba_id = 0;

    private boolean checkInput(String str, String str2) {
        for (int i = 0; i < str.length(); i++) {
            if (!isValidChar(str.charAt(i))) {
                Toast.makeText(getBaseContext(), "Only A-Z a-z _-!#$%.~ symbols allowed!", 1).show();
                return false;
            }
        }
        if (str2.equals("name")) {
            if (str.length() >= 1 && str.length() <= 15) {
                return true;
            }
            Toast.makeText(getBaseContext(), "1-15 symbols!", 1).show();
            return false;
        }
        if (str.length() >= 1 && str.length() <= 20) {
            return true;
        }
        Toast.makeText(getBaseContext(), "1-20 symbols!", 1).show();
        return false;
    }

    private void displayTextInputFragment() {
        String string;
        String string2;
        String string3;
        switch (this.samba_id) {
            case 1:
                string = getString(R.string.samba_workgroup_title);
                string2 = getString(R.string.samba_workgroup_summary);
                string3 = Settings.System.getString(this.resolver, "samba_workgroup");
                break;
            case 2:
                string = getString(R.string.samba_netbios_title);
                string2 = getString(R.string.samba_netbios_summary);
                string3 = Settings.System.getString(this.resolver, "samba_netbios");
                break;
            case 3:
                string = getString(R.string.samba_user_title);
                string2 = getString(R.string.samba_user_summary);
                string3 = Settings.System.getString(this.resolver, "samba_user");
                break;
            case 4:
                string = getString(R.string.samba_pass_title);
                string2 = getString(R.string.samba_pass_summary);
                string3 = Settings.System.getString(this.resolver, "samba_password");
                break;
            default:
                string = "Error samba_id";
                string2 = "Error samba_id";
                string3 = "Error samba_id";
                break;
        }
        TextInputWizardFragment newInstance = TextInputWizardFragment.newInstance(string, string2, 1, string3);
        FragmentTransaction beginTransaction = getFragmentManager().beginTransaction();
        beginTransaction.replace(R.id.content_wrapper, newInstance);
        beginTransaction.addToBackStack(null);
        beginTransaction.commit();
    }

    private boolean isValidChar(char c) {
        return c == '-' || c == '_' || c == '!' || c == '#' || c == '$' || c == '%' || c == '.' || c == '~' || (c >= '0' && c <= '9') || ((c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z'));
    }

    private void setSambaString(String str) {
        if (str.length() != 0) {
            if (!checkInput(str, this.samba_id == 2 ? "name" : "")) {
                return;
            }
            switch (this.samba_id) {
                case 1:
                    Settings.System.putString(this.resolver, "samba_workgroup", str);
                    break;
                case 2:
                    Settings.System.putString(this.resolver, "samba_netbios", str);
                    break;
                case 3:
                    Settings.System.putString(this.resolver, "samba_user", str);
                    break;
                case 4:
                    Settings.System.putString(this.resolver, "samba_password", str);
                    break;
            }
            this.mSmbManager.updateSambaConfig();
        }
        finish();
    }

    @Override // android.app.Activity
    public void onBackPressed() {
        if (getFragmentManager().getBackStackEntryCount() == 1) {
            finish();
        } else {
            super.onBackPressed();
        }
    }

    @Override // android.app.Activity
    protected void onCreate(Bundle bundle) {
        super.onCreate(bundle);
        setContentView(R.layout.setup_activity);
        this.resolver = getContentResolver();
        this.mSmbManager = (SambaManager) getSystemService("misc_sambaserver");
        this.samba_id = Integer.parseInt(getIntent().getStringExtra("samba_id"));
        displayTextInputFragment();
    }

    @Override // com.android.tv.settings.connectivity.setup.TextInputWizardFragment.Listener
    public boolean onTextInputComplete(String str) {
        setSambaString(str);
        return true;
    }
}
